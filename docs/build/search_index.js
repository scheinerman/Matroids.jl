var documenterSearchIndex = {"docs":
[{"location":"design/#How-the-Matroids-Module-Works","page":"Design","title":"How the Matroids Module Works","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"The fundamental design philosophy of this Matroids module is that  ","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"the ground set of a matroid is always of the form {1,2,\\ldots,m},\nmatroids are defined by way of their rank function, and\nthe matroid data structures are immutable.","category":"page"},{"location":"design/#Ground-Sets","page":"Design","title":"Ground Sets","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"We adopt the philosophy of the Graphs modules in that the ground set of a matroid is always of the form 12ldotsm where m is a nonnegative integer. ","category":"page"},{"location":"design/#Rank-Functions-Define-Matroids","page":"Design","title":"Rank Functions Define Matroids","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"Mathematically, matroids are defined as a pair (SmathcalI) where mathcalI is the set of subsets of S that are independent. However, keeping mathcalI as a data structure is inefficient because the number of independent sets in a matroid may be enormous. ","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"For example, the simple uniform matroid U(105) has a ten element ground set but has 638 independent sets. However, the rank function of this matroid is easy to define. For any subset X of the ground set 10, we simply have rho(X) = minX 5.","category":"page"},{"location":"design/#Matroids-are-Immutable","page":"Design","title":"Matroids are Immutable","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"One created, a matroid cannot be modified. Operations on matroids, such as deleting an element, create a new matroid. ","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"For example, when an element of a matroid M is deleted, a new matroid is created. ","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"For example, if a matroid has 10 elements and element 3 is deleted, the new matroid's ground set is 12ldots9. If (say) 257 is independent in M, then in the new matroid the set 246 is independent. If x is an element with x3, then in the new matroid it is represented as x-1. This is consistent with vertex deletion in Graphs. ","category":"page"},{"location":"design/#Creating-Your-Own-Matroid","page":"Design","title":"Creating Your Own Matroid","text":"","category":"section"},{"location":"design/","page":"Design","title":"Design","text":"To create a new type of matroid, first define a structure for its rank function. This should be a subtype of AbstractRankFunction. The definition should look something like this:","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"struct MyRankFunction <: AbstractRankFunction\n    data\n    function MyRankFunction(creation_data)\n        # operations to create the data structure \n        return new(data)\n    end \nend","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Second, defined how your rank function operates on a set of integers:","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"(r::MyRankFunction)(S::Set{T}) where {T<:Integer}\n    # calculate the rank, r of the set S\n    return r\nend","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"It is important that your rank function satisfy the usual matroid rank axioms or the resulting Matroid will not be a matroid.","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"Finally, define a function to MyMatroid(data) that creates the matroid:","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"function MyMatroid(parameters)\n    # create the rank function r and the size of the ground set m from the parameters\n    return Matroid(m, r)\nend","category":"page"},{"location":"design/","page":"Design","title":"Design","text":"As an example, look at UniformRankFunction and UniformMatroid in src/RankFunctions.jl.","category":"page"},{"location":"math/#Core-Mathematical-Definitions","page":"What is a Matroid?","title":"Core Mathematical Definitions","text":"","category":"section"},{"location":"math/","page":"What is a Matroid?","title":"What is a Matroid?","text":"A matroid is a pair M=(SmathcalI) where S is a set and mathcalI is a set of subsets of S where:","category":"page"},{"location":"math/","page":"What is a Matroid?","title":"What is a Matroid?","text":"the emptyset varnothing is an element of mathcalI ,\nif A subseteq B in mathcalI then A in mathcalI, and\nif AB in mathcalI and A  B, then there is an x in B - A such that A cupx in mathcalI. ","category":"page"},{"location":"math/","page":"What is a Matroid?","title":"What is a Matroid?","text":"The set S is called the ground set of M and the sets in mathcalI are  called independent. Refer to standard references for  a more extensive introduction.","category":"page"},{"location":"math/","page":"What is a Matroid?","title":"What is a Matroid?","text":"The rank of a matroid M=(SmathcalI) is the size of a largest independent subset of S. The rank of M is the largest rank of a member of mathcalI. An independent sets of maximum rank is called a basis. ","category":"page"},{"location":"math/","page":"What is a Matroid?","title":"What is a Matroid?","text":"See a matroid textbook or online resource for more detail. ","category":"page"},{"location":"#Matroids","page":"Documentation","title":"Matroids","text":"","category":"section"},{"location":"#Creating-Matroids","page":"Documentation","title":"Creating Matroids","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"In this implementation of matroids, the ground set, S, is always of the form {1,2,...,m} where m is a nonnegative integer.  ","category":"page"},{"location":"#Matroid-from-a-Matrix","page":"Documentation","title":"Matroid from a Matrix","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Given a matrix A, use Matroid(A) to create a matroid based on the column vectors in A.","category":"page"},{"location":"#Matroid-from-a-Graph","page":"Documentation","title":"Matroid from a Graph","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Given a graph g, use Matroid(g) to create the cycle matroid of g. Here, g is an  undirected graph from the Graphs module. The graph may have loops, but multiple edges are not supported by Graphs. ","category":"page"},{"location":"#Uniform-Matroids","page":"Documentation","title":"Uniform Matroids","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Use UniformMatroid(m,k) to create a matroid whose ground set is {1,2,...,m} in which all sets of size k or smaller are independent. ","category":"page"},{"location":"#Determining-Matroid-Properties","page":"Documentation","title":"Determining Matroid Properties","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Let M be a matroid. ","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"The number of elements in the ground set is given by ne(M). \nThe rank of M is given by rank(M).\nIf S is a subset of the elements of M, the rank of that set is given by rank(M,S). This may be called on a list of elements (e.g., rank(M,1,2,3)) or a vector of elements (e.g., rank(M,[1,2,3])).\nUse isindependent(M,S) to check if S is an independent subset of the elements of M. \nisloop(M,x) checks if x is a loop element in M.","category":"page"},{"location":"#Bases","page":"Documentation","title":"Bases","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"A basis of a matroid is a maximum-size independent set. To find a basis of a matroid M, use basis(M). Note that matroid typically has many bases. This function returns one of them with no guarantee as to which.","category":"page"},{"location":"","page":"Documentation","title":"Documentation","text":"Given weights wt (specified as a Dict) for the elements of a matroid M, use  min_weight_basis(M, wt) to return a basis the sum of whose weights is smallest. ","category":"page"},{"location":"#Operations","page":"Documentation","title":"Operations","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"These operations create new matroids from previously created matroids. Remember: Matroids are immutable so these operations do not modify existing matroids.","category":"page"},{"location":"#Duality","page":"Documentation","title":"Duality","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"For a matroid M, use dual(M) to create the dual of M. ","category":"page"},{"location":"#To-Do-List","page":"Documentation","title":"To Do List","text":"","category":"section"},{"location":"","page":"Documentation","title":"Documentation","text":"Create a simple MultiGraph type to include multiple edges.\nOther ways to create matroids (e.g., from a finite projective plane).\nImplement matroid operations such as:\nDual\nDisjoint union\nDeletion\nContraction","category":"page"}]
}
